(window.webpackJsonp=window.webpackJsonp||[]).push([[15],{214:function(t,a,s){"use strict";s.r(a);var r=s(0),e=Object(r.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"简介"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#简介"}},[t._v("#")]),t._v(" 简介")]),t._v(" "),s("p",[t._v("无论任何的后端框架，都逃离不了MVC经典的设计思想，JavaEE,egg.js等框架思想均是基于mvc，指定的路由跳转到指定的方法处理，传递req，res对象进行逻辑处理以及数据库获取数据后返回到前台浏览器端。具体如何实现路由与方法之间的映射，就是框架本身代码的事情了（感觉这种说路由也不对，改叫API比较适合。")]),t._v(" "),s("h2",{attrs:{id:"koa2的使用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#koa2的使用"}},[t._v("#")]),t._v(" koa2的使用")]),t._v(" "),s("h2",{attrs:{id:"实现一个koa2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#实现一个koa2"}},[t._v("#")]),t._v(" 实现一个Koa2")])])}),[],!1,null,null,null);a.default=e.exports}}]);